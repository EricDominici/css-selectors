    1  git config  --global  user.name  "tu_nombre"
    2  git config  --global init.defaultBranch main
    3  git config  --global init.defaultBranch main
    4  git config  --global  --list  
    5   cd
    6  pdw
    7  pdw 
    8  cd curso-platzi
    9  git init
   10  git status
   11  clea
   12  clear
   13  cd $ cd \U\erody\Documents\curso-platz\erody\Documents\curso-platzi
   14  git status
   15  git init
   16  gh
   17  gh auth login --web
   18  $ gh auth login --web
   19   gh auth login --web
   20  Eric_Dominici@DESKTOP-P711QV0 MINGW64 ~ (main)
   21  $ gh
   22  Work seamlessly with GitHub from the command line.
   23  USAGE
   24    gh <command> <subcommand> [flags]
   25  CORE COMMANDS
   26    browse:     Open the repository in the browser
   27    codespace:  Connect to and manage your codespaces
   28    gist:       Manage gists
   29    issue:      Manage issues
   30    pr:         Manage pull requests
   31    release:    Manage GitHub releases
   32    repo:       Create, clone, fork, and view repositories
   33  ACTIONS COMMANDS
   34    actions:    Learn about working with GitHub actions
   35    run:        View details about workflow runs
   36    workflow:   View details about GitHub Actions workflows
   37  ADDITIONAL COMMANDS
   38    alias:      Create command shortcuts
   39    api:        Make an authenticated GitHub API request
   40    auth:       Login, logout, and refresh your authentication
   41    completion: Generate shell completion scripts
   42    config:     Manage configuration for gh
   43    extension:  Manage gh extensions
   44    gpg-key:    Manage GPG keys
   45    help:       Help about any command
   46    secret:     Manage GitHub secrets
   47    ssh-key:    Manage SSH keys
   48  FLAGS
   49    --help      Show help for command
   50    --version   Show gh version
   51  EXAMPLES
   52    $ gh issue create
   53    $ gh repo clone cli/cli
   54  pwd
   55  ~
   56  pwd
   57  history > history.txthistory > history.txt
   58  git logs
   59  log > logs_git.md
   60  git commit -m "Selector por nombre de etiqueta "
   61  git add .
   62  git commit -m "Selector por nombre de etiqueta"
   63  git push
   64   git add .
   65  git commit -m "Selector por ID"
   66  git push
   67  git add .
   68  git commit -m "Selector decendente"
   69  git push
   70  git add .
   71  git commit -m "Selector por ID"
   72  git push
   73  history
   74  git add .
   75  git commit -m "Selector universal"
   76  git push
   77  git add .
   78  git commit -m "Selectores de padre e hijo"
   79  git push
   80  git add .
   81  git commit -m "Selectores de hermano hermano"
   82  git push
   83  git add .
   84  git commit -m "Selectores por atributos"
   85  git push
   86  git add .
   87  git commit -m "Selectores por clase"
   88  git push
   89  history > history.txt
